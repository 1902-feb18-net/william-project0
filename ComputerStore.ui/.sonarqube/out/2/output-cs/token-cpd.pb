ãÀ
^C:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\ComputerStoreRepository.cs
	namespace 	
ComputerStore
 
. 
Context 
{		 
public

 

class

 #
ComputerStoreRepository

 (
:

) *$
IComputerStoreRepository

+ C
{ 
private 
readonly 
Project0Context (
_db) ,
;, -
public #
ComputerStoreRepository &
(& '
Project0Context' 6
db7 9
)9 :
{ 	
_db 
= 
db 
?? 
throw 
new !!
ArgumentNullException" 7
(7 8
nameof8 >
(> ?
db? A
)A B
)B C
;C D
} 	
public 
IEnumerable 
< 
Library "
." #

OrderBatch# -
>- .
GetLocal/ 7
(7 8
)8 9
{ 	
return 
Mapper 
. 
Map 
( 
_db !
.! "

OrderBatch" ,
., -
Local- 2
.2 3
ToList3 9
(9 :
): ;
); <
;< =
} 	
public 
void 
AddCustomer 
(  
Library  '
.' (
Customer( 0
customer1 9
)9 :
{ 	
_db 
. 
Add 
( 
Mapper 
. 
Map 
( 
customer '
)' (
)( )
;) *
} 	
public 
void 
AddOrder 
( 
Library $
.$ %
	OrderItem% .
order/ 4
)4 5
{   	
_db!! 
.!! 
Add!! 
(!! 
Mapper!! 
.!! 
Map!! 
(!! 
order!! $
)!!$ %
)!!% &
;!!& '
}"" 	
public$$ 
void$$ 

AddProduct$$ 
($$ 
Library$$ &
.$$& '
Product$$' .
product$$/ 6
)$$6 7
{%% 	
_db&& 
.&& 
Add&& 
(&& 
Mapper&& 
.&& 
Map&& 
(&& 
product&& &
)&&& '
)&&' (
;&&( )
}'' 	
public)) 
void)) 
AddStore)) 
()) 
Library)) $
.))$ %
Store))% *
store))+ 0
)))0 1
{** 	
_db++ 
.++ 
Add++ 
(++ 
Mapper++ 
.++ 
Map++ 
(++ 
store++ $
)++$ %
)++% &
;++& '
},, 	
public.. 
void.. 
AddInventory..  
(..  !
Library..! (
...( )
	Inventory..) 2
	inventory..3 <
)..< =
{// 	
_db00 
.00 
Add00 
(00 
Mapper00 
.00 
Map00 
(00 
	inventory00 (
)00( )
)00) *
;00* +
}11 	
public33 
void33 
AddOrderBatch33 !
(33! "
Library33" )
.33) *

OrderBatch33* 4

orderBatch335 ?
)33? @
{44 	
_db55 
.55 
Add55 
(55 
Mapper55 
.55 
Map55 
(55 

orderBatch55 )
)55) *
)55* +
;55+ ,
}66 	
public88 
void88 
AddProductGroup88 #
(88# $
Library88$ +
.88+ ,
ProductGroup88, 8
productGroup889 E
)88E F
{99 	
_db:: 
.:: 
Add:: 
(:: 
Mapper:: 
.:: 
Map:: 
(:: 
productGroup:: +
)::+ ,
)::, -
;::- .
};; 	
public== 
void== 
AddSubProduct== !
(==! "
Library==" )
.==) *

SubProduct==* 4

subProduct==5 ?
)==? @
{>> 	
_db?? 
.?? 
Add?? 
(?? 
Mapper?? 
.?? 
Map?? 
(?? 

subProduct?? )
)??) *
)??* +
;??+ ,
}@@ 	
publicCC 
voidCC 
DeleteCustomerCC "
(CC" #
intCC# &

customerIDCC' 1
)CC1 2
{DD 	
_dbEE 
.EE 
RemoveEE 
(EE 
_dbEE 
.EE 
CustomerEE #
.EE# $
FindEE$ (
(EE( )

customerIDEE) 3
)EE3 4
)EE4 5
;EE5 6
}FF 	
publicHH 
voidHH 
DeleteOrderHH 
(HH  
intHH  #
orderIDHH$ +
)HH+ ,
{II 	
_dbJJ 
.JJ 
RemoveJJ 
(JJ 
_dbJJ 
.JJ 
	OrderItemJJ $
.JJ$ %
FindJJ% )
(JJ) *
orderIDJJ* 1
)JJ1 2
)JJ2 3
;JJ3 4
}KK 	
publicMM 
voidMM 
DeleteProductMM !
(MM! "
intMM" %
	productIDMM& /
)MM/ 0
{NN 	
_dbOO 
.OO 
RemoveOO 
(OO 
_dbOO 
.OO 
ProductOO "
.OO" #
FindOO# '
(OO' (
	productIDOO( 1
)OO1 2
)OO2 3
;OO3 4
}PP 	
publicRR 
voidRR 
DeleteStoreRR 
(RR  
intRR  #
storeIDRR$ +
)RR+ ,
{SS 	
_dbTT 
.TT 
RemoveTT 
(TT 
_dbTT 
.TT 
StoreTT  
.TT  !
FindTT! %
(TT% &
storeIDTT& -
)TT- .
)TT. /
;TT/ 0
}UU 	
publicWW 
voidWW 
DeleteInventoryWW #
(WW# $
intWW$ '
inventoryIDWW( 3
)WW3 4
{XX 	
_dbYY 
.YY 
RemoveYY 
(YY 
_dbYY 
.YY 
	InventoryYY $
.YY$ %
FindYY% )
(YY) *
inventoryIDYY* 5
)YY5 6
)YY6 7
;YY7 8
}ZZ 	
public\\ 
void\\ 
DeleteOrderBatch\\ $
(\\$ %
int\\% (
orderBatchID\\) 5
)\\5 6
{]] 	
_db^^ 
.^^ 
Remove^^ 
(^^ 
_db^^ 
.^^ 

OrderBatch^^ %
.^^% &
Find^^& *
(^^* +
orderBatchID^^+ 7
)^^7 8
)^^8 9
;^^9 :
}__ 	
publicaa 
voidaa 
DeleteProductGroupaa &
(aa& '
intaa' *
productGroupIDaa+ 9
)aa9 :
{bb 	
_dbcc 
.cc 
Removecc 
(cc 
_dbcc 
.cc 
ProductGroupcc '
.cc' (
Findcc( ,
(cc, -
productGroupIDcc- ;
)cc; <
)cc< =
;cc= >
}dd 	
publicff 
voidff 
DeleteSubProductff $
(ff$ %
intff% (
subProductIDff) 5
)ff5 6
{gg 	
_dbhh 
.hh 
Removehh 
(hh 
_dbhh 
.hh 

SubProducthh %
.hh% &
Findhh& *
(hh* +
subProductIDhh+ 7
)hh7 8
)hh8 9
;hh9 :
}ii 	
publicmm 
IEnumerablemm 
<mm 
Librarymm "
.mm" #
Customermm# +
>mm+ ,
GetCustomersmm- 9
(mm9 :
stringmm: @
searchmmA G
=mmH I
nullmmJ N
)mmN O
{nn 	
ifoo 
(oo 
searchoo 
==oo 
nulloo 
)oo 
{pp 
returnqq 
Mapperqq 
.qq 
Mapqq !
(qq! "
_dbqq" %
.qq% &
Customerqq& .
.qq. /
AsNoTrackingqq/ ;
(qq; <
)qq< =
)qq= >
;qq> ?
}rr 
elsess 
{tt 
returnuu 
Mapperuu 
.uu 
Mapuu !
(uu! "
_dbuu" %
.uu% &
Customeruu& .
.uu. /
AsNoTrackinguu/ ;
(uu; <
)uu< =
.uu= >
Whereuu> C
(uuC D
cuuD E
=>uuF H
cuuI J
.uuJ K
	FirstNameuuK T
.uuT U
ContainsuuU ]
(uu] ^
searchuu^ d
)uud e
)uue f
)uuf g
;uug h
}vv 
}ww 	
publicyy 
Libraryyy 
.yy 
Customeryy 
GetCustomerByIdyy  /
(yy/ 0
intyy0 3
idyy4 6
)yy6 7
{zz 	
return{{ 
Mapper{{ 
.{{ 
Map{{ 
({{ 
_db{{ !
.{{! "
Customer{{" *
.{{* +
AsNoTracking{{+ 7
({{7 8
){{8 9
.{{9 :
First{{: ?
({{? @
c{{@ A
=>{{B D
c{{E F
.{{F G
Id{{G I
=={{J L
id{{M O
){{O P
){{P Q
;{{Q R
}|| 	
public 
IEnumerable 
< 
Library "
." #
	OrderItem# ,
>, -
	GetOrders. 7
(7 8
)8 9
{
ÄÄ 	
return
ÅÅ 
Mapper
ÅÅ 
.
ÅÅ 
Map
ÅÅ 
(
ÅÅ 
_db
ÅÅ !
.
ÅÅ! "
	OrderItem
ÅÅ" +
.
ÅÅ+ ,
AsNoTracking
ÅÅ, 8
(
ÅÅ8 9
)
ÅÅ9 :
)
ÅÅ: ;
;
ÅÅ; <
}
ÇÇ 	
public
ÑÑ 
IEnumerable
ÑÑ 
<
ÑÑ 
Library
ÑÑ "
.
ÑÑ" #
	OrderItem
ÑÑ# ,
>
ÑÑ, -
GetOrdersByBatch
ÑÑ. >
(
ÑÑ> ?
int
ÑÑ? B
batchId
ÑÑC J
)
ÑÑJ K
{
ÖÖ 	
return
ÜÜ 
Mapper
ÜÜ 
.
ÜÜ 
Map
ÜÜ 
(
ÜÜ 
_db
ÜÜ !
.
ÜÜ! "
	OrderItem
ÜÜ" +
.
ÜÜ+ ,
AsNoTracking
ÜÜ, 8
(
ÜÜ8 9
)
ÜÜ9 :
.
ÜÜ: ;
Where
ÜÜ; @
(
ÜÜ@ A
o
ÜÜA B
=>
ÜÜC E
o
ÜÜF G
.
ÜÜG H
BatchId
ÜÜH O
==
ÜÜP R
batchId
ÜÜS Z
)
ÜÜZ [
)
ÜÜ[ \
;
ÜÜ\ ]
}
áá 	
public
ââ 
Library
ââ 
.
ââ 
	OrderItem
ââ  
GetOrderById
ââ! -
(
ââ- .
int
ââ. 1
Id
ââ2 4
)
ââ4 5
{
ää 	
return
ãã 
Mapper
ãã 
.
ãã 
Map
ãã 
(
ãã 
_db
ãã !
.
ãã! "
	OrderItem
ãã" +
.
ãã+ ,
AsNoTracking
ãã, 8
(
ãã8 9
)
ãã9 :
.
ãã: ;
First
ãã; @
(
ãã@ A
o
ããA B
=>
ããC E
o
ããF G
.
ããG H
Id
ããH J
==
ããK M
Id
ããN P
)
ããP Q
)
ããQ R
;
ããR S
}
åå 	
public
èè 
IEnumerable
èè 
<
èè 
Library
èè "
.
èè" #
Product
èè# *
>
èè* +
GetProducts
èè, 7
(
èè7 8
)
èè8 9
{
êê 	
return
ëë 
Mapper
ëë 
.
ëë 
Map
ëë 
(
ëë 
_db
ëë !
.
ëë! "
Product
ëë" )
.
ëë) *
AsNoTracking
ëë* 6
(
ëë6 7
)
ëë7 8
)
ëë8 9
;
ëë9 :
}
íí 	
public
ïï 
IEnumerable
ïï 
<
ïï 
Library
ïï "
.
ïï" #
Store
ïï# (
>
ïï( )
	GetStores
ïï* 3
(
ïï3 4
string
ïï4 :
search
ïï; A
=
ïïB C
null
ïïD H
)
ïïH I
{
ññ 	
if
óó 
(
óó 
search
óó 
==
óó 
null
óó 
)
óó 
{
òò 
return
ôô 
Mapper
ôô 
.
ôô 
Map
ôô !
(
ôô! "
_db
ôô" %
.
ôô% &
Store
ôô& +
.
ôô+ ,
AsNoTracking
ôô, 8
(
ôô8 9
)
ôô9 :
)
ôô: ;
;
ôô; <
}
öö 
else
õõ 
{
úú 
return
ùù 
Mapper
ùù 
.
ùù 
Map
ùù !
(
ùù! "
_db
ùù" %
.
ùù% &
Store
ùù& +
.
ùù+ ,
AsNoTracking
ùù, 8
(
ùù8 9
)
ùù9 :
.
ùù: ;
Where
ùù; @
(
ùù@ A
s
ùùA B
=>
ùùC E
s
ùùF G
.
ùùG H
Name
ùùH L
.
ùùL M
Contains
ùùM U
(
ùùU V
search
ùùV \
)
ùù\ ]
)
ùù] ^
)
ùù^ _
;
ùù_ `
}
ûû 
}
üü 	
public
°° 
Library
°° 
.
°° 
Store
°° 
GetStoreById
°° )
(
°°) *
int
°°* -
id
°°. 0
)
°°0 1
{
¢¢ 	
return
££ 
Mapper
££ 
.
££ 
Map
££ 
(
££ 
_db
££ !
.
££! "
Store
££" '
.
££' (
AsNoTracking
££( 4
(
££4 5
)
££5 6
.
££6 7
First
££7 <
(
££< =
s
££= >
=>
££? A
s
££B C
.
££C D
Id
££D F
==
££G I
id
££J L
)
££L M
)
££M N
;
££N O
}
§§ 	
public
ßß 
IEnumerable
ßß 
<
ßß 
Library
ßß "
.
ßß" #
	Inventory
ßß# ,
>
ßß, -
GetInventories
ßß. <
(
ßß< =
)
ßß= >
{
®® 	
return
©© 
Mapper
©© 
.
©© 
Map
©© 
(
©© 
_db
©© !
.
©©! "
	Inventory
©©" +
.
©©+ ,
AsNoTracking
©©, 8
(
©©8 9
)
©©9 :
)
©©: ;
;
©©; <
}
™™ 	
public
¨¨ 
IEnumerable
¨¨ 
<
¨¨ 
Library
¨¨ "
.
¨¨" #
	Inventory
¨¨# ,
>
¨¨, -#
GetInventoriesByStore
¨¨. C
(
¨¨C D
int
¨¨D G
Id
¨¨H J
)
¨¨J K
{
≠≠ 	
return
ÆÆ 
Mapper
ÆÆ 
.
ÆÆ 
Map
ÆÆ 
(
ÆÆ 
_db
ÆÆ !
.
ÆÆ! "
	Inventory
ÆÆ" +
.
ÆÆ+ ,
AsNoTracking
ÆÆ, 8
(
ÆÆ8 9
)
ÆÆ9 :
.
ÆÆ: ;
Where
ÆÆ; @
(
ÆÆ@ A
i
ÆÆA B
=>
ÆÆC E
i
ÆÆF G
.
ÆÆG H
StoreId
ÆÆH O
==
ÆÆP R
Id
ÆÆS U
)
ÆÆU V
)
ÆÆV W
;
ÆÆW X
}
ØØ 	
public
≤≤ 
IEnumerable
≤≤ 
<
≤≤ 
Library
≤≤ "
.
≤≤" #

OrderBatch
≤≤# -
>
≤≤- .
GetOrderBatches
≤≤/ >
(
≤≤> ?
)
≤≤? @
{
≥≥ 	
return
¥¥ 
Mapper
¥¥ 
.
¥¥ 
Map
¥¥ 
(
¥¥ 
_db
¥¥ !
.
¥¥! "

OrderBatch
¥¥" ,
.
¥¥, -
AsNoTracking
¥¥- 9
(
¥¥9 :
)
¥¥: ;
)
¥¥; <
;
¥¥< =
}
µµ 	
public
∑∑ 
IEnumerable
∑∑ 
<
∑∑ 
Library
∑∑ "
.
∑∑" #

OrderBatch
∑∑# -
>
∑∑- .'
GetOrderBatchesByCustomer
∑∑/ H
(
∑∑H I
int
∑∑I L

customerId
∑∑M W
)
∑∑W X
{
∏∏ 	
return
ππ 
Mapper
ππ 
.
ππ 
Map
ππ 
(
ππ 
_db
ππ !
.
ππ! "

OrderBatch
ππ" ,
.
ππ, -
AsNoTracking
ππ- 9
(
ππ9 :
)
ππ: ;
.
ππ; <
Where
ππ< A
(
ππA B
b
ππB C
=>
ππD F
b
ππG H
.
ππH I

CustomerId
ππI S
==
ππT V

customerId
ππW a
)
ππa b
)
ππb c
.
ππc d
OrderByDescending
ππd u
(
ππu v
o
ππv w
=>
ππx z
o
ππ{ |
.
ππ| }
Dateππ} Å
)ππÅ Ç
;ππÇ É
}
∫∫ 	
public
ºº 
IEnumerable
ºº 
<
ºº 
Library
ºº "
.
ºº" #

OrderBatch
ºº# -
>
ºº- .$
GetOrderBatchesByStore
ºº/ E
(
ººE F
int
ººF I
storeId
ººJ Q
)
ººQ R
{
ΩΩ 	
return
ææ 
Mapper
ææ 
.
ææ 
Map
ææ 
(
ææ 
_db
ææ !
.
ææ! "

OrderBatch
ææ" ,
.
ææ, -
AsNoTracking
ææ- 9
(
ææ9 :
)
ææ: ;
.
ææ; <
Where
ææ< A
(
ææA B
b
ææB C
=>
ææD F
b
ææG H
.
ææH I
StoreId
ææI P
==
ææQ S
storeId
ææT [
)
ææ[ \
.
ææ\ ]
OrderByDescending
ææ] n
(
ææn o
o
ææo p
=>
ææq s
o
ææt u
.
ææu v

TimePlacedææv Ä
)ææÄ Å
)ææÅ Ç
;ææÇ É
}
øø 	
public
¡¡ 
Library
¡¡ 
.
¡¡ 

OrderBatch
¡¡ !
GetOrderBatchById
¡¡" 3
(
¡¡3 4
int
¡¡4 7
Id
¡¡8 :
)
¡¡: ;
{
¬¬ 	
return
√√ 
Mapper
√√ 
.
√√ 
Map
√√ 
(
√√ 
_db
√√ !
.
√√! "

OrderBatch
√√" ,
.
√√, -
AsNoTracking
√√- 9
(
√√9 :
)
√√: ;
.
√√; <
Where
√√< A
(
√√A B
b
√√B C
=>
√√D F
b
√√G H
.
√√H I
Id
√√I K
==
√√L N
Id
√√O Q
)
√√Q R
)
√√R S
.
√√S T
First
√√T Y
(
√√Y Z
)
√√Z [
;
√√[ \
}
ƒƒ 	
public
«« 
IEnumerable
«« 
<
«« 
Library
«« "
.
««" #
ProductGroup
««# /
>
««/ 0
GetProductGroups
««1 A
(
««A B
)
««B C
{
»» 	
return
…… 
Mapper
…… 
.
…… 
Map
…… 
(
…… 
_db
…… !
.
……! "
ProductGroup
……" .
.
……. /
AsNoTracking
……/ ;
(
……; <
)
……< =
)
……= >
;
……> ?
}
   	
public
ÕÕ 
IEnumerable
ÕÕ 
<
ÕÕ 
Library
ÕÕ "
.
ÕÕ" #

SubProduct
ÕÕ# -
>
ÕÕ- .
GetSubProducts
ÕÕ/ =
(
ÕÕ= >
)
ÕÕ> ?
{
ŒŒ 	
return
œœ 
Mapper
œœ 
.
œœ 
Map
œœ 
(
œœ 
_db
œœ !
.
œœ! "

SubProduct
œœ" ,
.
œœ, -
AsNoTracking
œœ- 9
(
œœ9 :
)
œœ: ;
)
œœ; <
;
œœ< =
}
–– 	
public
”” 
void
”” 
Save
”” 
(
”” 
)
”” 
{
‘‘ 	
_db
’’ 
.
’’ 
SaveChanges
’’ 
(
’’ 
)
’’ 
;
’’ 
}
÷÷ 	
public
ŸŸ 
void
ŸŸ 
UpdateCustomer
ŸŸ "
(
ŸŸ" #
Library
ŸŸ# *
.
ŸŸ* +
Customer
ŸŸ+ 3
customer
ŸŸ4 <
)
ŸŸ< =
{
⁄⁄ 	
_db
€€ 
.
€€ 
Entry
€€ 
(
€€ 
_db
€€ 
.
€€ 
Customer
€€ "
.
€€" #
Find
€€# '
(
€€' (
customer
€€( 0
.
€€0 1
ID
€€1 3
)
€€3 4
)
€€4 5
.
€€5 6
CurrentValues
€€6 C
.
€€C D
	SetValues
€€D M
(
€€M N
Mapper
€€N T
.
€€T U
Map
€€U X
(
€€X Y
customer
€€Y a
)
€€a b
)
€€b c
;
€€c d
}
‹‹ 	
public
ﬁﬁ 
void
ﬁﬁ 
UpdateOrder
ﬁﬁ 
(
ﬁﬁ  
Library
ﬁﬁ  '
.
ﬁﬁ' (
	OrderItem
ﬁﬁ( 1
order
ﬁﬁ2 7
)
ﬁﬁ7 8
{
ﬂﬂ 	
_db
‡‡ 
.
‡‡ 
Entry
‡‡ 
(
‡‡ 
_db
‡‡ 
.
‡‡ 
	OrderItem
‡‡ #
.
‡‡# $
Find
‡‡$ (
(
‡‡( )
order
‡‡) .
.
‡‡. /
Id
‡‡/ 1
)
‡‡1 2
)
‡‡2 3
.
‡‡3 4
CurrentValues
‡‡4 A
.
‡‡A B
	SetValues
‡‡B K
(
‡‡K L
Mapper
‡‡L R
.
‡‡R S
Map
‡‡S V
(
‡‡V W
order
‡‡W \
)
‡‡\ ]
)
‡‡] ^
;
‡‡^ _
}
·· 	
public
„„ 
void
„„ 
UpdateProduct
„„ !
(
„„! "
Library
„„" )
.
„„) *
Product
„„* 1
product
„„2 9
)
„„9 :
{
‰‰ 	
_db
ÂÂ 
.
ÂÂ 
Entry
ÂÂ 
(
ÂÂ 
_db
ÂÂ 
.
ÂÂ 
Product
ÂÂ !
.
ÂÂ! "
Find
ÂÂ" &
(
ÂÂ& '
product
ÂÂ' .
.
ÂÂ. /
Id
ÂÂ/ 1
)
ÂÂ1 2
)
ÂÂ2 3
.
ÂÂ3 4
CurrentValues
ÂÂ4 A
.
ÂÂA B
	SetValues
ÂÂB K
(
ÂÂK L
Mapper
ÂÂL R
.
ÂÂR S
Map
ÂÂS V
(
ÂÂV W
product
ÂÂW ^
)
ÂÂ^ _
)
ÂÂ_ `
;
ÂÂ` a
}
ÊÊ 	
public
ËË 
void
ËË 
UpdateStore
ËË 
(
ËË  
Library
ËË  '
.
ËË' (
Store
ËË( -
store
ËË. 3
)
ËË3 4
{
ÈÈ 	
_db
ÍÍ 
.
ÍÍ 
Entry
ÍÍ 
(
ÍÍ 
_db
ÍÍ 
.
ÍÍ 
Store
ÍÍ 
.
ÍÍ  
Find
ÍÍ  $
(
ÍÍ$ %
store
ÍÍ% *
.
ÍÍ* +
Id
ÍÍ+ -
)
ÍÍ- .
)
ÍÍ. /
.
ÍÍ/ 0
CurrentValues
ÍÍ0 =
.
ÍÍ= >
	SetValues
ÍÍ> G
(
ÍÍG H
Mapper
ÍÍH N
.
ÍÍN O
Map
ÍÍO R
(
ÍÍR S
store
ÍÍS X
)
ÍÍX Y
)
ÍÍY Z
;
ÍÍZ [
}
ÎÎ 	
public
ÌÌ 
void
ÌÌ 
UpdateInventory
ÌÌ #
(
ÌÌ# $
Library
ÌÌ$ +
.
ÌÌ+ ,
	Inventory
ÌÌ, 5
	inventory
ÌÌ6 ?
)
ÌÌ? @
{
ÓÓ 	
_db
ÔÔ 
.
ÔÔ 
Entry
ÔÔ 
(
ÔÔ 
_db
ÔÔ 
.
ÔÔ 
	Inventory
ÔÔ #
.
ÔÔ# $
Find
ÔÔ$ (
(
ÔÔ( )
	inventory
ÔÔ) 2
.
ÔÔ2 3
Id
ÔÔ3 5
)
ÔÔ5 6
)
ÔÔ6 7
.
ÔÔ7 8
CurrentValues
ÔÔ8 E
.
ÔÔE F
	SetValues
ÔÔF O
(
ÔÔO P
Mapper
ÔÔP V
.
ÔÔV W
Map
ÔÔW Z
(
ÔÔZ [
	inventory
ÔÔ[ d
)
ÔÔd e
)
ÔÔe f
;
ÔÔf g
}
 	
public
ÚÚ 
void
ÚÚ 
UpdateOrderBatch
ÚÚ $
(
ÚÚ$ %
Library
ÚÚ% ,
.
ÚÚ, -

OrderBatch
ÚÚ- 7

orderBatch
ÚÚ8 B
)
ÚÚB C
{
ÛÛ 	
_db
ÙÙ 
.
ÙÙ 
Entry
ÙÙ 
(
ÙÙ 
_db
ÙÙ 
.
ÙÙ 

OrderBatch
ÙÙ $
.
ÙÙ$ %
Find
ÙÙ% )
(
ÙÙ) *

orderBatch
ÙÙ* 4
.
ÙÙ4 5
Id
ÙÙ5 7
)
ÙÙ7 8
)
ÙÙ8 9
.
ÙÙ9 :
CurrentValues
ÙÙ: G
.
ÙÙG H
	SetValues
ÙÙH Q
(
ÙÙQ R
Mapper
ÙÙR X
.
ÙÙX Y
Map
ÙÙY \
(
ÙÙ\ ]

orderBatch
ÙÙ] g
)
ÙÙg h
)
ÙÙh i
;
ÙÙi j
}
ıı 	
public
˜˜ 
void
˜˜  
UpdateProductGroup
˜˜ &
(
˜˜& '
Library
˜˜' .
.
˜˜. /
ProductGroup
˜˜/ ;
productGroup
˜˜< H
)
˜˜H I
{
¯¯ 	
_db
˘˘ 
.
˘˘ 
Entry
˘˘ 
(
˘˘ 
_db
˘˘ 
.
˘˘ 
ProductGroup
˘˘ &
.
˘˘& '
Find
˘˘' +
(
˘˘+ ,
productGroup
˘˘, 8
.
˘˘8 9
Id
˘˘9 ;
)
˘˘; <
)
˘˘< =
.
˘˘= >
CurrentValues
˘˘> K
.
˘˘K L
	SetValues
˘˘L U
(
˘˘U V
Mapper
˘˘V \
.
˘˘\ ]
Map
˘˘] `
(
˘˘` a
productGroup
˘˘a m
)
˘˘m n
)
˘˘n o
;
˘˘o p
}
˙˙ 	
public
¸¸ 
void
¸¸ 
UpdateSubProduct
¸¸ $
(
¸¸$ %
Library
¸¸% ,
.
¸¸, -

SubProduct
¸¸- 7

subProduct
¸¸8 B
)
¸¸B C
{
˝˝ 	
_db
˛˛ 
.
˛˛ 
Entry
˛˛ 
(
˛˛ 
_db
˛˛ 
.
˛˛ 

SubProduct
˛˛ $
.
˛˛$ %
Find
˛˛% )
(
˛˛) *

subProduct
˛˛* 4
.
˛˛4 5
Id
˛˛5 7
)
˛˛7 8
)
˛˛8 9
.
˛˛9 :
CurrentValues
˛˛: G
.
˛˛G H
	SetValues
˛˛H Q
(
˛˛Q R
Mapper
˛˛R X
.
˛˛X Y
Map
˛˛Y \
(
˛˛\ ]

subProduct
˛˛] g
)
˛˛g h
)
˛˛h i
;
˛˛i j
}
ˇˇ 	
}
ÄÄ 
}ÅÅ ˛
OC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\Customer.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 
Customer !
{ 
public 
Customer 
( 
) 
{		 	

OrderBatch

 
=

 
new

 
HashSet

 $
<

$ %

OrderBatch

% /
>

/ 0
(

0 1
)

1 2
;

2 3
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
StoreId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Address 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
virtual 
Store 
Store "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
virtual 
ICollection "
<" #

OrderBatch# -
>- .

OrderBatch/ 9
{: ;
get< ?
;? @
setA D
;D E
}F G
} 
} ˆ	
PC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\Inventory.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 
	Inventory "
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
StoreId		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 
SubProductId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
virtual 
Store 
Store "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
virtual 

SubProduct !

SubProduct" ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
} 
} ¿ö
MC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\Mapper.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

static 
class 
Mapper 
{ 
public

 
static

 
Library

 
.

 
Customer

 &
Map

' *
(

* +
Customer

+ 3
customer

4 <
)

< =
=>

> @
new

A D
Library

E L
.

L M
Customer

M U
{ 	
ID 
= 
customer 
. 
Id 
, 
StoreId 
= 
customer 
. 
StoreId &
,& '
	FirstName 
= 
customer  
.  !
	FirstName! *
,* +
LastName 
= 
customer 
.  
LastName  (
,( )
Address 
= 
customer 
. 
Address &
,& '
PhoneNumber 
= 
customer "
." #
PhoneNumber# .
,. /
} 	
;	 

public 
static 
Customer 
Map "
(" #
Library# *
.* +
Customer+ 3
customer4 <
)< =
=>> @
newA D
CustomerE M
{ 	
Id 
= 
customer 
. 
ID 
, 
StoreId 
= 
customer 
. 
StoreId &
,& '
	FirstName 
= 
customer  
.  !
	FirstName! *
,* +
LastName 
= 
customer 
.  
LastName  (
,( )
Address 
= 
customer 
. 
Address &
,& '
PhoneNumber 
= 
customer "
." #
PhoneNumber# .
,. /
} 	
;	 

public 
static 
IEnumerable !
<! "
Library" )
.) *
Customer* 2
>2 3
Map4 7
(7 8
IEnumerable8 C
<C D
CustomerD L
>L M
	customersN W
)W X
=>Y [
	customers\ e
.e f
Selectf l
(l m
Mapm p
)p q
;q r
public   
static   
IEnumerable   !
<  ! "
Customer  " *
>  * +
Map  , /
(  / 0
IEnumerable  0 ;
<  ; <
Library  < C
.  C D
Customer  D L
>  L M
	customers  N W
)  W X
=>  Y [
	customers  \ e
.  e f
Select  f l
(  l m
Map  m p
)  p q
;  q r
public$$ 
static$$ 
Library$$ 
.$$ 
Store$$ #
Map$$$ '
($$' (
Store$$( -
store$$. 3
)$$3 4
=>$$5 7
new$$8 ;
Library$$< C
.$$C D
Store$$D I
{%% 	
Id&& 
=&& 
store&& 
.&& 
Id&& 
,&& 
Name'' 
='' 
store'' 
.'' 
Name'' 
,'' 
Address(( 
=(( 
store(( 
.(( 
Address(( #
})) 	
;))	 

public++ 
static++ 
Store++ 
Map++ 
(++  
Library++  '
.++' (
Store++( -
store++. 3
)++3 4
=>++5 7
new++8 ;
Store++< A
{,, 	
Id-- 
=-- 
store-- 
.-- 
Id-- 
,-- 
Name.. 
=.. 
store.. 
... 
Name.. 
,.. 
Address// 
=// 
store// 
.// 
Address// #
}00 	
;00	 

public22 
static22 
IEnumerable22 !
<22! "
Library22" )
.22) *
Store22* /
>22/ 0
Map221 4
(224 5
IEnumerable225 @
<22@ A
Store22A F
>22F G
stores22H N
)22N O
=>22P R
stores22S Y
.22Y Z
Select22Z `
(22` a
Map22a d
)22d e
;22e f
public44 
static44 
IEnumerable44 !
<44! "
Store44" '
>44' (
Map44) ,
(44, -
IEnumerable44- 8
<448 9
Library449 @
.44@ A
Store44A F
>44F G
stores44H N
)44N O
=>44P R
stores44S Y
.44Y Z
Select44Z `
(44` a
Map44a d
)44d e
;44e f
public88 
static88 
Library88 
.88 
	OrderItem88 '
Map88( +
(88+ ,
	OrderItem88, 5
order886 ;
)88; <
=>88= ?
new88@ C
Library88D K
.88K L
	OrderItem88L U
{99 	
Id:: 
=:: 
order:: 
.:: 
Id:: 
,:: 
BatchId;; 
=;; 
order;; 
.;; 
BatchId;; #
,;;# $
	ProductId<< 
=<< 
order<< 
.<< 
	ProductId<< '
,<<' (
Quantity== 
=== 
order== 
.== 
Quantity== %
,==% &
Name>> 
=>> 
order>> 
.>> 
Name>> 
,>> 
Cost?? 
=?? 
order?? 
.?? 
Cost?? 
}@@ 	
;@@	 

publicBB 
staticBB 
	OrderItemBB 
MapBB  #
(BB# $
LibraryBB$ +
.BB+ ,
	OrderItemBB, 5
orderBB6 ;
)BB; <
=>BB= ?
newBB@ C
	OrderItemBBD M
{CC 	
IdDD 
=DD 
orderDD 
.DD 
IdDD 
,DD 
BatchIdEE 
=EE 
orderEE 
.EE 
BatchIdEE #
,EE# $
	ProductIdFF 
=FF 
orderFF 
.FF 
	ProductIdFF '
,FF' (
QuantityGG 
=GG 
orderGG 
.GG 
QuantityGG %
,GG% &
NameHH 
=HH 
orderHH 
.HH 
NameHH 
,HH 
CostII 
=II 
orderII 
.II 
CostII 
}JJ 	
;JJ	 

publicLL 
staticLL 
IEnumerableLL !
<LL! "
LibraryLL" )
.LL) *
	OrderItemLL* 3
>LL3 4
MapLL5 8
(LL8 9
IEnumerableLL9 D
<LLD E
	OrderItemLLE N
>LLN O
ordersLLP V
)LLV W
=>LLX Z
ordersLL[ a
.LLa b
SelectLLb h
(LLh i
MapLLi l
)LLl m
;LLm n
publicNN 
staticNN 
IEnumerableNN !
<NN! "
	OrderItemNN" +
>NN+ ,
MapNN- 0
(NN0 1
IEnumerableNN1 <
<NN< =
LibraryNN= D
.NND E
	OrderItemNNE N
>NNN O
ordersNNP V
)NNV W
=>NNX Z
ordersNN[ a
.NNa b
SelectNNb h
(NNh i
MapNNi l
)NNl m
;NNm n
publicRR 
staticRR 
LibraryRR 
.RR 
ProductRR %
MapRR& )
(RR) *
ProductRR* 1
productRR2 9
)RR9 :
=>RR; =
newRR> A
LibraryRRB I
.RRI J
ProductRRJ Q
{SS 	
IdTT 
=TT 
productTT 
.TT 
IdTT 
,TT 
NameUU 
=UU 
productUU 
.UU 
NameUU 
,UU  
CostVV 
=VV 
productVV 
.VV 
CostVV 
}WW 	
;WW	 

publicYY 
staticYY 
ProductYY 
MapYY !
(YY! "
LibraryYY" )
.YY) *
ProductYY* 1
productYY2 9
)YY9 :
=>YY; =
newYY> A
ProductYYB I
{ZZ 	
Id[[ 
=[[ 
product[[ 
.[[ 
Id[[ 
,[[ 
Name\\ 
=\\ 
product\\ 
.\\ 
Name\\ 
,\\  
Cost]] 
=]] 
product]] 
.]] 
Cost]] 
}^^ 	
;^^	 

public`` 
static`` 
IEnumerable`` !
<``! "
Library``" )
.``) *
Product``* 1
>``1 2
Map``3 6
(``6 7
IEnumerable``7 B
<``B C
Product``C J
>``J K
products``L T
)``T U
=>``V X
products``Y a
.``a b
Select``b h
(``h i
Map``i l
)``l m
;``m n
publicbb 
staticbb 
IEnumerablebb !
<bb! "
Productbb" )
>bb) *
Mapbb+ .
(bb. /
IEnumerablebb/ :
<bb: ;
Librarybb; B
.bbB C
ProductbbC J
>bbJ K
productsbbL T
)bbT U
=>bbV X
productsbbY a
.bba b
Selectbbb h
(bbh i
Mapbbi l
)bbl m
;bbm n
publicff 
staticff 
Libraryff 
.ff 
	Inventoryff '
Mapff( +
(ff+ ,
	Inventoryff, 5
	inventoryff6 ?
)ff? @
=>ffA C
newffD G
LibraryffH O
.ffO P
	InventoryffP Y
{gg 	
Idhh 
=hh 
	inventoryhh 
.hh 
Idhh 
,hh 
StoreIdii 
=ii 
	inventoryii 
.ii  
StoreIdii  '
,ii' (
SubProductIdjj 
=jj 
	inventoryjj $
.jj$ %
SubProductIdjj% 1
,jj1 2
Quantitykk 
=kk 
	inventorykk  
.kk  !
Quantitykk! )
}ll 	
;ll	 

publicnn 
staticnn 
	Inventorynn 
Mapnn  #
(nn# $
Librarynn$ +
.nn+ ,
	Inventorynn, 5
	inventorynn6 ?
)nn? @
=>nnA C
newnnD G
	InventorynnH Q
{oo 	
Idpp 
=pp 
	inventorypp 
.pp 
Idpp 
,pp 
StoreIdqq 
=qq 
	inventoryqq 
.qq  
StoreIdqq  '
,qq' (
SubProductIdrr 
=rr 
	inventoryrr $
.rr$ %
SubProductIdrr% 1
,rr1 2
Quantityss 
=ss 
	inventoryss  
.ss  !
Quantityss! )
}tt 	
;tt	 

publicvv 
staticvv 
IEnumerablevv !
<vv! "
Libraryvv" )
.vv) *
	Inventoryvv* 3
>vv3 4
Mapvv5 8
(vv8 9
IEnumerablevv9 D
<vvD E
	InventoryvvE N
>vvN O
inventoriesvvP [
)vv[ \
=>vv] _
inventoriesvv` k
.vvk l
Selectvvl r
(vvr s
Mapvvs v
)vvv w
;vvw x
publicxx 
staticxx 
IEnumerablexx !
<xx! "
	Inventoryxx" +
>xx+ ,
Mapxx- 0
(xx0 1
IEnumerablexx1 <
<xx< =
Libraryxx= D
.xxD E
	InventoryxxE N
>xxN O
inventoriesxxP [
)xx[ \
=>xx] _
inventoriesxx` k
.xxk l
Selectxxl r
(xxr s
Mapxxs v
)xxv w
;xxw x
public|| 
static|| 
Library|| 
.|| 

OrderBatch|| (
Map||) ,
(||, -

OrderBatch||- 7

orderBatch||8 B
)||B C
=>||D F
new||G J
Library||K R
.||R S

OrderBatch||S ]
{}} 	
Id~~ 
=~~ 

orderBatch~~ 
.~~ 
Id~~ 
,~~ 
StoreId 
= 

orderBatch  
.  !
StoreId! (
,( )

CustomerId
ÄÄ 
=
ÄÄ 

orderBatch
ÄÄ #
.
ÄÄ# $

CustomerId
ÄÄ$ .
,
ÄÄ. /
Date
ÅÅ 
=
ÅÅ 

orderBatch
ÅÅ 
.
ÅÅ 

TimePlaced
ÅÅ (
,
ÅÅ( )
Items
ÇÇ 
=
ÇÇ 
Map
ÇÇ 
(
ÇÇ 

orderBatch
ÇÇ "
.
ÇÇ" #
	OrderItem
ÇÇ# ,
)
ÇÇ, -
.
ÇÇ- .
ToList
ÇÇ. 4
(
ÇÇ4 5
)
ÇÇ5 6
}
ÉÉ 	
;
ÉÉ	 

public
ÖÖ 
static
ÖÖ 

OrderBatch
ÖÖ  
Map
ÖÖ! $
(
ÖÖ$ %
Library
ÖÖ% ,
.
ÖÖ, -

OrderBatch
ÖÖ- 7

orderBatch
ÖÖ8 B
)
ÖÖB C
=>
ÖÖD F
new
ÖÖG J

OrderBatch
ÖÖK U
{
ÜÜ 	
Id
áá 
=
áá 

orderBatch
áá 
.
áá 
Id
áá 
,
áá 
StoreId
àà 
=
àà 

orderBatch
àà  
.
àà  !
StoreId
àà! (
,
àà( )

CustomerId
ââ 
=
ââ 

orderBatch
ââ #
.
ââ# $

CustomerId
ââ$ .
,
ââ. /

TimePlaced
ää 
=
ää 

orderBatch
ää #
.
ää# $
Date
ää$ (
,
ää( )
	OrderItem
ãã 
=
ãã 
Map
ãã 
(
ãã 

orderBatch
ãã &
.
ãã& '
Items
ãã' ,
)
ãã, -
.
ãã- .
ToList
ãã. 4
(
ãã4 5
)
ãã5 6
}
åå 	
;
åå	 

public
éé 
static
éé 
IEnumerable
éé !
<
éé! "
Library
éé" )
.
éé) *

OrderBatch
éé* 4
>
éé4 5
Map
éé6 9
(
éé9 :
IEnumerable
éé: E
<
ééE F

OrderBatch
ééF P
>
ééP Q
batches
ééR Y
)
ééY Z
=>
éé[ ]
batches
éé^ e
.
éée f
Select
ééf l
(
éél m
Map
éém p
)
éép q
;
ééq r
public
êê 
static
êê 
IEnumerable
êê !
<
êê! "

OrderBatch
êê" ,
>
êê, -
Map
êê. 1
(
êê1 2
IEnumerable
êê2 =
<
êê= >
Library
êê> E
.
êêE F

OrderBatch
êêF P
>
êêP Q
batches
êêR Y
)
êêY Z
=>
êê[ ]
batches
êê^ e
.
êêe f
Select
êêf l
(
êêl m
Map
êêm p
)
êêp q
;
êêq r
public
îî 
static
îî 
Library
îî 
.
îî 
ProductGroup
îî *
Map
îî+ .
(
îî. /
ProductGroup
îî/ ;
productGroup
îî< H
)
îîH I
=>
îîJ L
new
îîM P
Library
îîQ X
.
îîX Y
ProductGroup
îîY e
{
ïï 	
Id
ññ 
=
ññ 
productGroup
ññ 
.
ññ 
Id
ññ  
,
ññ  !
	ProductId
óó 
=
óó 
productGroup
óó $
.
óó$ %
	ProductId
óó% .
,
óó. /
SubProductId
òò 
=
òò 
productGroup
òò '
.
òò' (
SubProductId
òò( 4
}
ôô 	
;
ôô	 

public
õõ 
static
õõ 
ProductGroup
õõ "
Map
õõ# &
(
õõ& '
Library
õõ' .
.
õõ. /
ProductGroup
õõ/ ;
productGroup
õõ< H
)
õõH I
=>
õõJ L
new
õõM P
ProductGroup
õõQ ]
{
úú 	
Id
ùù 
=
ùù 
productGroup
ùù 
.
ùù 
Id
ùù  
,
ùù  !
	ProductId
ûû 
=
ûû 
productGroup
ûû $
.
ûû$ %
	ProductId
ûû% .
,
ûû. /
SubProductId
üü 
=
üü 
productGroup
üü '
.
üü' (
SubProductId
üü( 4
}
†† 	
;
††	 

public
¢¢ 
static
¢¢ 
IEnumerable
¢¢ !
<
¢¢! "
Library
¢¢" )
.
¢¢) *
ProductGroup
¢¢* 6
>
¢¢6 7
Map
¢¢8 ;
(
¢¢; <
IEnumerable
¢¢< G
<
¢¢G H
ProductGroup
¢¢H T
>
¢¢T U
groups
¢¢V \
)
¢¢\ ]
=>
¢¢^ `
groups
¢¢a g
.
¢¢g h
Select
¢¢h n
(
¢¢n o
Map
¢¢o r
)
¢¢r s
;
¢¢s t
public
§§ 
static
§§ 
IEnumerable
§§ !
<
§§! "
ProductGroup
§§" .
>
§§. /
Map
§§0 3
(
§§3 4
IEnumerable
§§4 ?
<
§§? @
Library
§§@ G
.
§§G H
ProductGroup
§§H T
>
§§T U
groups
§§V \
)
§§\ ]
=>
§§^ `
groups
§§a g
.
§§g h
Select
§§h n
(
§§n o
Map
§§o r
)
§§r s
;
§§s t
public
®® 
static
®® 
Library
®® 
.
®® 

SubProduct
®® (
Map
®®) ,
(
®®, -

SubProduct
®®- 7

subProduct
®®8 B
)
®®B C
=>
®®D F
new
®®G J
Library
®®K R
.
®®R S

SubProduct
®®S ]
{
©© 	
Id
™™ 
=
™™ 

subProduct
™™ 
.
™™ 
Id
™™ 
,
™™ 
Name
´´ 
=
´´ 

subProduct
´´ 
.
´´ 
Name
´´ "
}
¨¨ 	
;
¨¨	 

public
ÆÆ 
static
ÆÆ 

SubProduct
ÆÆ  
Map
ÆÆ! $
(
ÆÆ$ %
Library
ÆÆ% ,
.
ÆÆ, -

SubProduct
ÆÆ- 7

subProduct
ÆÆ8 B
)
ÆÆB C
=>
ÆÆD F
new
ÆÆG J

SubProduct
ÆÆK U
{
ØØ 	
Id
∞∞ 
=
∞∞ 

subProduct
∞∞ 
.
∞∞ 
Id
∞∞ 
,
∞∞ 
Name
±± 
=
±± 

subProduct
±± 
.
±± 
Name
±± "
}
≤≤ 	
;
≤≤	 

public
¥¥ 
static
¥¥ 
IEnumerable
¥¥ !
<
¥¥! "
Library
¥¥" )
.
¥¥) *

SubProduct
¥¥* 4
>
¥¥4 5
Map
¥¥6 9
(
¥¥9 :
IEnumerable
¥¥: E
<
¥¥E F

SubProduct
¥¥F P
>
¥¥P Q
subProducts
¥¥R ]
)
¥¥] ^
=>
¥¥_ a
subProducts
¥¥b m
.
¥¥m n
Select
¥¥n t
(
¥¥t u
Map
¥¥u x
)
¥¥x y
;
¥¥y z
public
∂∂ 
static
∂∂ 
IEnumerable
∂∂ !
<
∂∂! "

SubProduct
∂∂" ,
>
∂∂, -
Map
∂∂. 1
(
∂∂1 2
IEnumerable
∂∂2 =
<
∂∂= >
Library
∂∂> E
.
∂∂E F

SubProduct
∂∂F P
>
∂∂P Q
subProducts
∂∂R ]
)
∂∂] ^
=>
∂∂_ a
subProducts
∂∂b m
.
∂∂m n
Select
∂∂n t
(
∂∂t u
Map
∂∂u x
)
∂∂x y
;
∂∂y z
}
ªª 
}ºº ˚
QC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\OrderBatch.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 

OrderBatch #
{ 
public 

OrderBatch 
( 
) 
{		 	
	OrderItem

 
=

 
new

 
HashSet

 #
<

# $
	OrderItem

$ -
>

- .
(

. /
)

/ 0
;

0 1
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 

CustomerId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
StoreId 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 

TimePlaced "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
virtual 
Customer 
Customer  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
virtual 
Store 
Store "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
virtual 
ICollection "
<" #
	OrderItem# ,
>, -
	OrderItem. 7
{8 9
get: =
;= >
set? B
;B C
}D E
} 
} £
PC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\OrderItem.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 
	OrderItem "
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
BatchId		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 
	ProductId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
decimal 
Cost 
{ 
get !
;! "
set# &
;& '
}( )
public 
virtual 

OrderBatch !
Batch" '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
virtual 
Product 
Product &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} ñ
NC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\Product.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 
Product  
{ 
public 
Product 
( 
) 
{		 	
	OrderItem

 
=

 
new

 
HashSet

 #
<

# $
	OrderItem

$ -
>

- .
(

. /
)

/ 0
;

0 1
ProductGroup 
= 
new 
HashSet &
<& '
ProductGroup' 3
>3 4
(4 5
)5 6
;6 7
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
decimal 
Cost 
{ 
get !
;! "
set# &
;& '
}( )
public 
virtual 
ICollection "
<" #
	OrderItem# ,
>, -
	OrderItem. 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
virtual 
ICollection "
<" #
ProductGroup# /
>/ 0
ProductGroup1 =
{> ?
get@ C
;C D
setE H
;H I
}J K
} 
} È
SC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\ProductGroup.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 
ProductGroup %
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
	ProductId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
int

 
SubProductId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
virtual 
Product 
Product &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
virtual 

SubProduct !

SubProduct" ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
} 
} £ò
VC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\Project0Context.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 
Project0Context (
:) *
	DbContext+ 4
{ 
public		 
Project0Context		 
(		 
)		  
{

 	
} 	
public 
Project0Context 
( 
DbContextOptions /
</ 0
Project0Context0 ?
>? @
optionsA H
)H I
: 
base 
( 
options 
) 
{ 	
} 	
public 
virtual 
DbSet 
< 
Customer %
>% &
Customer' /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
virtual 
DbSet 
< 
	Inventory &
>& '
	Inventory( 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
virtual 
DbSet 
< 

OrderBatch '
>' (

OrderBatch) 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
virtual 
DbSet 
< 
	OrderItem &
>& '
	OrderItem( 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
virtual 
DbSet 
< 
Product $
>$ %
Product& -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
virtual 
DbSet 
< 
ProductGroup )
>) *
ProductGroup+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
virtual 
DbSet 
< 
Store "
>" #
Store$ )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
virtual 
DbSet 
< 

SubProduct '
>' (

SubProduct) 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
HasAnnotation &
(& '
$str' 7
,7 8
$str9 P
)P Q
;Q R
modelBuilder 
. 
Entity 
<  
Customer  (
>( )
() *
entity* 0
=>1 3
{   
entity!! 
.!! 
Property!! 
(!!  
e!!  !
=>!!" $
e!!% &
.!!& '
Id!!' )
)!!) *
.!!* +
HasColumnName!!+ 8
(!!8 9
$str!!9 =
)!!= >
;!!> ?
entity## 
.## 
Property## 
(##  
e##  !
=>##" $
e##% &
.##& '
Address##' .
)##. /
.##/ 0
HasMaxLength##0 <
(##< =
$num##= @
)##@ A
;##A B
entity%% 
.%% 
Property%% 
(%%  
e%%  !
=>%%" $
e%%% &
.%%& '
	FirstName%%' 0
)%%0 1
.%%1 2
HasMaxLength%%2 >
(%%> ?
$num%%? B
)%%B C
;%%C D
entity'' 
.'' 
Property'' 
(''  
e''  !
=>''" $
e''% &
.''& '
LastName''' /
)''/ 0
.''0 1
HasMaxLength''1 =
(''= >
$num''> A
)''A B
;''B C
entity)) 
.)) 
Property)) 
())  
e))  !
=>))" $
e))% &
.))& '
PhoneNumber))' 2
)))2 3
.))3 4
HasMaxLength))4 @
())@ A
$num))A C
)))C D
;))D E
entity++ 
.++ 
Property++ 
(++  
e++  !
=>++" $
e++% &
.++& '
StoreId++' .
)++. /
.++/ 0
HasColumnName++0 =
(++= >
$str++> G
)++G H
;++H I
entity-- 
.-- 
HasOne-- 
(-- 
d-- 
=>--  "
d--# $
.--$ %
Store--% *
)--* +
... 
WithMany.. 
(.. 
p.. 
=>..  "
p..# $
...$ %
Customer..% -
)..- .
.// 
HasForeignKey// "
(//" #
d//# $
=>//% '
d//( )
.//) *
StoreId//* 1
)//1 2
.00 
OnDelete00 
(00 
DeleteBehavior00 ,
.00, -
ClientSetNull00- :
)00: ;
.11 
HasConstraintName11 &
(11& '
$str11' G
)11G H
;11H I
}22 
)22 
;22 
modelBuilder44 
.44 
Entity44 
<44  
	Inventory44  )
>44) *
(44* +
entity44+ 1
=>442 4
{55 
entity66 
.66 
Property66 
(66  
e66  !
=>66" $
e66% &
.66& '
Id66' )
)66) *
.66* +
HasColumnName66+ 8
(668 9
$str669 =
)66= >
;66> ?
entity88 
.88 
Property88 
(88  
e88  !
=>88" $
e88% &
.88& '
StoreId88' .
)88. /
.88/ 0
HasColumnName880 =
(88= >
$str88> G
)88G H
;88H I
entity:: 
.:: 
Property:: 
(::  
e::  !
=>::" $
e::% &
.::& '
SubProductId::' 3
)::3 4
.::4 5
HasColumnName::5 B
(::B C
$str::C Q
)::Q R
;::R S
entity<< 
.<< 
HasOne<< 
(<< 
d<< 
=><<  "
d<<# $
.<<$ %
Store<<% *
)<<* +
.== 
WithMany== 
(== 
p== 
=>==  "
p==# $
.==$ %
	Inventory==% .
)==. /
.>> 
HasForeignKey>> "
(>>" #
d>># $
=>>>% '
d>>( )
.>>) *
StoreId>>* 1
)>>1 2
.?? 
OnDelete?? 
(?? 
DeleteBehavior?? ,
.??, -
ClientSetNull??- :
)??: ;
.@@ 
HasConstraintName@@ &
(@@& '
$str@@' G
)@@G H
;@@H I
entityBB 
.BB 
HasOneBB 
(BB 
dBB 
=>BB  "
dBB# $
.BB$ %

SubProductBB% /
)BB/ 0
.CC 
WithManyCC 
(CC 
pCC 
=>CC  "
pCC# $
.CC$ %
	InventoryCC% .
)CC. /
.DD 
HasForeignKeyDD "
(DD" #
dDD# $
=>DD% '
dDD( )
.DD) *
SubProductIdDD* 6
)DD6 7
.EE 
OnDeleteEE 
(EE 
DeleteBehaviorEE ,
.EE, -
ClientSetNullEE- :
)EE: ;
.FF 
HasConstraintNameFF &
(FF& '
$strFF' G
)FFG H
;FFH I
}GG 
)GG 
;GG 
modelBuilderII 
.II 
EntityII 
<II  

OrderBatchII  *
>II* +
(II+ ,
entityII, 2
=>II3 5
{JJ 
entityKK 
.KK 
PropertyKK 
(KK  
eKK  !
=>KK" $
eKK% &
.KK& '
IdKK' )
)KK) *
.KK* +
HasColumnNameKK+ 8
(KK8 9
$strKK9 =
)KK= >
;KK> ?
entityMM 
.MM 
PropertyMM 
(MM  
eMM  !
=>MM" $
eMM% &
.MM& '

CustomerIdMM' 1
)MM1 2
.MM2 3
HasColumnNameMM3 @
(MM@ A
$strMMA M
)MMM N
;MMN O
entityOO 
.OO 
PropertyOO 
(OO  
eOO  !
=>OO" $
eOO% &
.OO& '
StoreIdOO' .
)OO. /
.OO/ 0
HasColumnNameOO0 =
(OO= >
$strOO> G
)OOG H
;OOH I
entityQQ 
.QQ 
PropertyQQ 
(QQ  
eQQ  !
=>QQ" $
eQQ% &
.QQ& '

TimePlacedQQ' 1
)QQ1 2
.QQ2 3
HasDefaultValueSqlQQ3 E
(QQE F
$strQQF S
)QQS T
;QQT U
entitySS 
.SS 
HasOneSS 
(SS 
dSS 
=>SS  "
dSS# $
.SS$ %
CustomerSS% -
)SS- .
.TT 
WithManyTT 
(TT 
pTT 
=>TT  "
pTT# $
.TT$ %

OrderBatchTT% /
)TT/ 0
.UU 
HasForeignKeyUU "
(UU" #
dUU# $
=>UU% '
dUU( )
.UU) *

CustomerIdUU* 4
)UU4 5
.VV 
OnDeleteVV 
(VV 
DeleteBehaviorVV ,
.VV, -
ClientSetNullVV- :
)VV: ;
.WW 
HasConstraintNameWW &
(WW& '
$strWW' G
)WWG H
;WWH I
entityYY 
.YY 
HasOneYY 
(YY 
dYY 
=>YY  "
dYY# $
.YY$ %
StoreYY% *
)YY* +
.ZZ 
WithManyZZ 
(ZZ 
pZZ 
=>ZZ  "
pZZ# $
.ZZ$ %

OrderBatchZZ% /
)ZZ/ 0
.[[ 
HasForeignKey[[ "
([[" #
d[[# $
=>[[% '
d[[( )
.[[) *
StoreId[[* 1
)[[1 2
.\\ 
OnDelete\\ 
(\\ 
DeleteBehavior\\ ,
.\\, -
ClientSetNull\\- :
)\\: ;
.]] 
HasConstraintName]] &
(]]& '
$str]]' G
)]]G H
;]]H I
}^^ 
)^^ 
;^^ 
modelBuilder`` 
.`` 
Entity`` 
<``  
	OrderItem``  )
>``) *
(``* +
entity``+ 1
=>``2 4
{aa 
entitybb 
.bb 
Propertybb 
(bb  
ebb  !
=>bb" $
ebb% &
.bb& '
Idbb' )
)bb) *
.bb* +
HasColumnNamebb+ 8
(bb8 9
$strbb9 =
)bb= >
;bb> ?
entitydd 
.dd 
Propertydd 
(dd  
edd  !
=>dd" $
edd% &
.dd& '
BatchIddd' .
)dd. /
.dd/ 0
HasColumnNamedd0 =
(dd= >
$strdd> G
)ddG H
;ddH I
entityff 
.ff 
Propertyff 
(ff  
eff  !
=>ff" $
eff% &
.ff& '
Costff' +
)ff+ ,
.ff, -
HasColumnTypeff- :
(ff: ;
$strff; B
)ffB C
;ffC D
entityhh 
.hh 
Propertyhh 
(hh  
ehh  !
=>hh" $
ehh% &
.hh& '
Namehh' +
)hh+ ,
.ii 

IsRequiredii 
(ii  
)ii  !
.jj 
HasMaxLengthjj !
(jj! "
$numjj" %
)jj% &
;jj& '
entityll 
.ll 
Propertyll 
(ll  
ell  !
=>ll" $
ell% &
.ll& '
	ProductIdll' 0
)ll0 1
.ll1 2
HasColumnNamell2 ?
(ll? @
$strll@ K
)llK L
;llL M
entitynn 
.nn 
HasOnenn 
(nn 
dnn 
=>nn  "
dnn# $
.nn$ %
Batchnn% *
)nn* +
.oo 
WithManyoo 
(oo 
poo 
=>oo  "
poo# $
.oo$ %
	OrderItemoo% .
)oo. /
.pp 
HasForeignKeypp "
(pp" #
dpp# $
=>pp% '
dpp( )
.pp) *
BatchIdpp* 1
)pp1 2
.qq 
OnDeleteqq 
(qq 
DeleteBehaviorqq ,
.qq, -
ClientSetNullqq- :
)qq: ;
.rr 
HasConstraintNamerr &
(rr& '
$strrr' G
)rrG H
;rrH I
entitytt 
.tt 
HasOnett 
(tt 
dtt 
=>tt  "
dtt# $
.tt$ %
Producttt% ,
)tt, -
.uu 
WithManyuu 
(uu 
puu 
=>uu  "
puu# $
.uu$ %
	OrderItemuu% .
)uu. /
.vv 
HasForeignKeyvv "
(vv" #
dvv# $
=>vv% '
dvv( )
.vv) *
	ProductIdvv* 3
)vv3 4
.ww 
HasConstraintNameww &
(ww& '
$strww' G
)wwG H
;wwH I
}xx 
)xx 
;xx 
modelBuilderzz 
.zz 
Entityzz 
<zz  
Productzz  '
>zz' (
(zz( )
entityzz) /
=>zz0 2
{{{ 
entity|| 
.|| 
Property|| 
(||  
e||  !
=>||" $
e||% &
.||& '
Id||' )
)||) *
.||* +
HasColumnName||+ 8
(||8 9
$str||9 =
)||= >
;||> ?
entity~~ 
.~~ 
Property~~ 
(~~  
e~~  !
=>~~" $
e~~% &
.~~& '
Cost~~' +
)~~+ ,
.~~, -
HasColumnType~~- :
(~~: ;
$str~~; B
)~~B C
;~~C D
entity
ÄÄ 
.
ÄÄ 
Property
ÄÄ 
(
ÄÄ  
e
ÄÄ  !
=>
ÄÄ" $
e
ÄÄ% &
.
ÄÄ& '
Name
ÄÄ' +
)
ÄÄ+ ,
.
ÅÅ 

IsRequired
ÅÅ 
(
ÅÅ  
)
ÅÅ  !
.
ÇÇ 
HasMaxLength
ÇÇ !
(
ÇÇ! "
$num
ÇÇ" %
)
ÇÇ% &
;
ÇÇ& '
}
ÉÉ 
)
ÉÉ 
;
ÉÉ 
modelBuilder
ÖÖ 
.
ÖÖ 
Entity
ÖÖ 
<
ÖÖ  
ProductGroup
ÖÖ  ,
>
ÖÖ, -
(
ÖÖ- .
entity
ÖÖ. 4
=>
ÖÖ5 7
{
ÜÜ 
entity
áá 
.
áá 
Property
áá 
(
áá  
e
áá  !
=>
áá" $
e
áá% &
.
áá& '
Id
áá' )
)
áá) *
.
áá* +
HasColumnName
áá+ 8
(
áá8 9
$str
áá9 =
)
áá= >
;
áá> ?
entity
ââ 
.
ââ 
Property
ââ 
(
ââ  
e
ââ  !
=>
ââ" $
e
ââ% &
.
ââ& '
	ProductId
ââ' 0
)
ââ0 1
.
ââ1 2
HasColumnName
ââ2 ?
(
ââ? @
$str
ââ@ K
)
ââK L
;
ââL M
entity
ãã 
.
ãã 
Property
ãã 
(
ãã  
e
ãã  !
=>
ãã" $
e
ãã% &
.
ãã& '
SubProductId
ãã' 3
)
ãã3 4
.
ãã4 5
HasColumnName
ãã5 B
(
ããB C
$str
ããC Q
)
ããQ R
;
ããR S
entity
çç 
.
çç 
HasOne
çç 
(
çç 
d
çç 
=>
çç  "
d
çç# $
.
çç$ %
Product
çç% ,
)
çç, -
.
éé 
WithMany
éé 
(
éé 
p
éé 
=>
éé  "
p
éé# $
.
éé$ %
ProductGroup
éé% 1
)
éé1 2
.
èè 
HasForeignKey
èè "
(
èè" #
d
èè# $
=>
èè% '
d
èè( )
.
èè) *
	ProductId
èè* 3
)
èè3 4
.
êê 
HasConstraintName
êê &
(
êê& '
$str
êê' G
)
êêG H
;
êêH I
entity
íí 
.
íí 
HasOne
íí 
(
íí 
d
íí 
=>
íí  "
d
íí# $
.
íí$ %

SubProduct
íí% /
)
íí/ 0
.
ìì 
WithMany
ìì 
(
ìì 
p
ìì 
=>
ìì  "
p
ìì# $
.
ìì$ %
ProductGroup
ìì% 1
)
ìì1 2
.
îî 
HasForeignKey
îî "
(
îî" #
d
îî# $
=>
îî% '
d
îî( )
.
îî) *
SubProductId
îî* 6
)
îî6 7
.
ïï 
HasConstraintName
ïï &
(
ïï& '
$str
ïï' G
)
ïïG H
;
ïïH I
}
ññ 
)
ññ 
;
ññ 
modelBuilder
òò 
.
òò 
Entity
òò 
<
òò  
Store
òò  %
>
òò% &
(
òò& '
entity
òò' -
=>
òò. 0
{
ôô 
entity
öö 
.
öö 
Property
öö 
(
öö  
e
öö  !
=>
öö" $
e
öö% &
.
öö& '
Id
öö' )
)
öö) *
.
öö* +
HasColumnName
öö+ 8
(
öö8 9
$str
öö9 =
)
öö= >
;
öö> ?
entity
úú 
.
úú 
Property
úú 
(
úú  
e
úú  !
=>
úú" $
e
úú% &
.
úú& '
Address
úú' .
)
úú. /
.
úú/ 0
HasMaxLength
úú0 <
(
úú< =
$num
úú= @
)
úú@ A
;
úúA B
entity
ûû 
.
ûû 
Property
ûû 
(
ûû  
e
ûû  !
=>
ûû" $
e
ûû% &
.
ûû& '
Name
ûû' +
)
ûû+ ,
.
ûû, -
HasMaxLength
ûû- 9
(
ûû9 :
$num
ûû: <
)
ûû< =
;
ûû= >
}
üü 
)
üü 
;
üü 
modelBuilder
°° 
.
°° 
Entity
°° 
<
°°  

SubProduct
°°  *
>
°°* +
(
°°+ ,
entity
°°, 2
=>
°°3 5
{
¢¢ 
entity
££ 
.
££ 
Property
££ 
(
££  
e
££  !
=>
££" $
e
££% &
.
££& '
Id
££' )
)
££) *
.
££* +
HasColumnName
££+ 8
(
££8 9
$str
££9 =
)
££= >
;
££> ?
entity
•• 
.
•• 
Property
•• 
(
••  
e
••  !
=>
••" $
e
••% &
.
••& '
Name
••' +
)
••+ ,
.
¶¶ 

IsRequired
¶¶ 
(
¶¶  
)
¶¶  !
.
ßß 
HasMaxLength
ßß !
(
ßß! "
$num
ßß" %
)
ßß% &
;
ßß& '
}
®® 
)
®® 
;
®® 
}
©© 	
}
™™ 
}´´ †
LC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\Store.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 
Store 
{ 
public 
Store 
( 
) 
{		 	
Customer

 
=

 
new

 
HashSet

 "
<

" #
Customer

# +
>

+ ,
(

, -
)

- .
;

. /
	Inventory 
= 
new 
HashSet #
<# $
	Inventory$ -
>- .
(. /
)/ 0
;0 1

OrderBatch 
= 
new 
HashSet $
<$ %

OrderBatch% /
>/ 0
(0 1
)1 2
;2 3
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Address 
{ 
get  #
;# $
set% (
;( )
}* +
public 
virtual 
ICollection "
<" #
Customer# +
>+ ,
Customer- 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
virtual 
ICollection "
<" #
	Inventory# ,
>, -
	Inventory. 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
virtual 
ICollection "
<" #

OrderBatch# -
>- .

OrderBatch/ 9
{: ;
get< ?
;? @
setA D
;D E
}F G
} 
} Ü
QC:\revature\william-project0\ComputerStore.ui\ComputerStore.Context\SubProduct.cs
	namespace 	
ComputerStore
 
. 
Context 
{ 
public 

partial 
class 

SubProduct #
{ 
public 

SubProduct 
( 
) 
{		 	
	Inventory

 
=

 
new

 
HashSet

 #
<

# $
	Inventory

$ -
>

- .
(

. /
)

/ 0
;

0 1
ProductGroup 
= 
new 
HashSet &
<& '
ProductGroup' 3
>3 4
(4 5
)5 6
;6 7
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
virtual 
ICollection "
<" #
	Inventory# ,
>, -
	Inventory. 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
virtual 
ICollection "
<" #
ProductGroup# /
>/ 0
ProductGroup1 =
{> ?
get@ C
;C D
setE H
;H I
}J K
} 
} 